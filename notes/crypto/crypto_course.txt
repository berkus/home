Date: 19/01/2013
Tags: Security
slug: crypto-course-i
Title: Cryptography Course @ Coursera

This page summarizes and pretty-prints [my notes][notes] from the [Cryptography - I][course] course
at Coursera:

Uniform random variable
: If $U$ is a set, $r \xleftarrow{R} U$ is a _uniform random variable_ if $\forall a \in U:
  Pr[r=a]=1/|U|$

Most of encryption is XOR
: XOR makes non uniform random variables, uniform. If $Y$ is a random variable chosen from
  $\\{0,1\\}^n$ and $X\xleftarrow{R} \\{0,1\\}^n$ then then $Z:= X \oplus Y$ is also a uniform
  random variable. Intuitively, plaintext xor-ed with a key chosen at random, is also random.

Definition of a Cipher
: A _cipher_ is defined over $\(K,M,C\)$ where $K$ is the _key space_, $M$ is the
  _message space_ and $C$ is the _ciphertext space_ as a pair of algorithms $E:K \times M
  \rightarrow C$ and $D:K \times C \rightarrow M$ such that $\forall m \in M, k \in
  K: D(k,E(k,m))=m$. $E$ is often randomized, whereas $D$ is mostly determinstic.

Perfect Secrecy
: A secure cipher is one that does not reveal any information about the plaintext. Formally, a
  cipher $\(E,D\)$ has _perfect secrecy_ if for $k\xleftarrow{R}K$ and $\forall m_0, m_1 \in M :
  |m_0|=|m_1|$ the $Pr[E(k,m_0)=c]=Pr[E(k,m_1)=c]$. In words, this means that the adversary cannot
  distinguish one ciphertext from another and thus cannot derive any information about the
  plaintext.
 
One Time Pad
: A perfectly secure cipher where the message bits are XORed with randomly chosen key of the same
  length as the message. For $M=C=K=\\{0,1\\}^n$, $OTP=\(E,D\)$ where $E(k,m)=k\oplus m$ and $D(k,c)=k\oplus m$ 
  
Perfect secrecy requires long keys
: Shannon proved that for perfect secrecy $|K| \ge |M|$. The keys used to encrypt must be atleast as
  long as the messages they encrypt. This makes OTP impractical and we have to approximate them with
  stream ciphers.

Pseudo Random Generator (PRG)
: A PRG is a function $G: \\{0,1\\}^s \rightarrow \\{0,1\\}^n$ where $n\gg s$. It takes an $s$ bit
  key and generates an unpredicatable $n$ bit pseudo random key that can be used to xor messages. A
  PRG is _predicatable_ if there exists an "efficient" algorithm $A$ that takes the first $i$ bits
  of the PRG output and predict the $i+1^{th}$. Formally: $Pr[ A(G(k)[0\dots i-1])=G(k)[i]] > 1/2 +
  \epsilon$ for non-negligible values of $\epsilon$

Negligibility
: Practically speaking, anything less than $2^{-80}$ is negligible.

Real stream ciphers
: Older ones like RC4, CSS(content scrambling system) based on LFSR (linear feedback shift register)
have weaknesses. Newer ones include eStream ciphers Salsa20 and Sosemanuk.

Stream cipher security (informally)
: OTP and stream ciphers should not repeat the key for more than one message. Two-time-pad,
i.e. xoring two messages with the same key bits is insecure. OTPs are also malleable, i.e. modifying
the ciphertext has a predictable effect on the decrypted plaintext.

Statistical Test
: A statistical test is an "efficient" algorithm that takes a bit string and outputs 1 if it thinks
the string is random and 0 if it thinks otherwise. These are used to judge the quality of a PRG. An
ideal PRG is one for which no statistical test ever outputs 0.

Advantage
: Let $G:K \rightarrow \\{0,1\\}^n$ be a PRG and $A$ a statistical test, we define the _advantage_
of $A$ over $G$ $Adv_{PRG}[A,G]$ as: $$\left\lvert Pr_{k\xleftarrow{R}K}[A(G(k))=1] -
Pr_{r\xleftarrow{R}\\{0,1\\}^n}[A(r)=1]\right\rvert = \epsilon$$In words, the advantage is the
difference between the probability that the test outputs 1 for a pseudo random string generated by
the PRG and the probablity that the test outputs 1 for a _true_ random variable. If the advantage is
0, the test cannot distinguish between the PRG output and a true random string, conversely if the
advantage is 1, the test can completely distinguish between the two and thus PRG is bad.

Secure PRG
: A PRG is secure if for all efficient statistical test $A$, $Adv_{PRG}[A,G]$ is negligible.

Computationally Indistinguishable
: Two distributions $P_1$ and $P_2$ are computationally indistinguishable, $P_1 \approx_P P_2$ if
  for all efficient statistical tests $A$, $\left\lvert
  Pr_{x\xleftarrow{R}P_1}[A(x)=1]-Pr_{x\xleftarrow{R}P_2}[A(x)=1]\right\rvert$ is negligible.
  
Secure PRG (continued..)
: Alternate defintion: $\\{k\xleftarrow{R}K:G(K)\\} \approx_{P} uniform(\\{0,1\\}^n)$. Provably
secure PRGs do not exist. All secure PRGs are unpredicatable. Yao proved that unpredicatable PRGs
are secure.

Semantic Security
: Practical stream ciphers cannot provide "perfect secrecy" as Shannon defined it. We need a weaker
measure of security, that is provided by "semantic security". Instead of requiring the probability
distribution of the ciphertexts for any two messages to be the _same_ (as required by "perfect
secrecy") we weaken the requirement to have the two be just computationaly indistinguishable.


[course]: https://www.coursera.org/course/crypto
[notes]: https://github.com/aldrin/home/notes/courses/crypto/crypto-i.pdf
